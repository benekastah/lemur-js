// Generated by CoffeeScript 1.3.3
(function() {
  var C, L,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  L = lemur;

  C = L.Compiler;

  C.Number = (function(_super) {

    __extends(Number, _super);

    function Number(n) {
      Number.__super__.constructor.apply(this, arguments);
      this.value = Number(n);
    }

    Number.prototype.compile = function() {
      return "" + this.value;
    };

    return Number;

  })(C.Construct);

}).call(this);
