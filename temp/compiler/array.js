// Generated by CoffeeScript 1.3.3
(function() {
  var C, L,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  L = lemur;

  C = L.Compiler;

  C.Array = (function(_super) {

    __extends(Array, _super);

    function Array(items) {
      this.items = items;
      Array.__super__.constructor.apply(this, arguments);
    }

    Array.prototype.compile = function() {
      var c_items, item;
      c_items = (function() {
        var _i, _len, _ref, _results;
        _ref = this.items;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          item = _ref[_i];
          _results.push(item.compile());
        }
        return _results;
      }).call(this);
      return "[" + (c_items.join(', ')) + "]";
    };

    return Array;

  })(C.Construct);

}).call(this);
